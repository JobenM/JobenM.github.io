{"version":3,"sources":["static/react-logo.svg","static/gatsby.svg","static/graphql.svg","static/aws.svg","static/css.svg","static/cypress-io.svg","static/express.svg","static/javascript.svg","static/jest.svg","static/nodejs.svg","static/redux.svg","static/react-query.svg","static/eslint.svg","static/github.svg","static/mongodb.svg","static/green-checkmark.svg","static/red-x.svg","static/home.svg","static/tech.svg","static/contact.svg","pages/hero.js","pages/components-page.js","lib/tech-data.js","pages/technologies-page.js","components/input.js","components/notification.js","pages/contact-page.js","components/navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","className","src","reactIcon","alt","gatsbyIcon","graphqlIcon","ComponentsPage","name","logo","awsIcon","description","reactQuery","reduxIcon","javascriptIcon","nodeIcon","cypressIcon","expressIcon","jestIcon","cssIcon","eslintIcon","githubIcon","mongodbIcon","TechnologiesPage","techList","map","key","Input","placeholder","label","onChange","value","isRequired","defaultProps","Notification","isSent","messageText","greenCheckIcon","redCheckIcon","undefined","ContactsPage","useState","templateParams","setTemplateParams","isDisabled","messageSubmitted","message","replyEmail","e","target","phoneNumber","disabled","type","onClick","preventDefault","emailjs","send","then","messageFailed","links","icon","homeIcon","destination","techIcon","contactIcon","NavBar","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f36f4aa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.0691399b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gatsby.2def7e70.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphql.6270a2d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/aws.e9791afa.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.6120f0fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/cypress-io.871f3555.svg\";","module.exports = __webpack_public_path__ + \"static/media/express.f5560e5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.e2aaaa2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/jest.40ff828e.svg\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.ddee5660.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux.cd139abc.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-query.60a42585.svg\";","module.exports = __webpack_public_path__ + \"static/media/eslint.484ca6fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/mongodb.c2a864c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-checkmark.5a013bad.svg\";","module.exports = __webpack_public_path__ + \"static/media/red-x.c33c3a33.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.27c0aebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/tech.847451b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.5b09adca.svg\";","import React from 'react';\n\nimport reactIcon from '../static/react-logo.svg';\nimport gatsbyIcon from '../static/gatsby.svg';\nimport graphqlIcon from '../static/graphql.svg';\nimport './hero.css';\n\nconst Hero = () => (\n  <div>\n    <div className=\"container\">\n      <div className=\"content-wrapper\">\n        <div>\n          <h1 className=\"home-title\">\n            <span className=\"header\">A Frontend/Fullstack Developer of web applications.</span>\n            <span className=\"sub-content\">\n              \"I create scalable web experiences for my users with quality and integrity in mind.\"\n            </span>\n          </h1>\n        </div>\n      </div>\n    </div>\n    <div className=\"react-wrapper\">\n      <img src={reactIcon} className=\"logo\" alt=\"react-logo\" />\n    </div>\n    <div className=\"gatsby-wrapper\">\n      <img src={gatsbyIcon} className=\"logo\" alt=\"gastby-logo\" />\n    </div>\n    <div className=\"gql-wrapper\">\n      <img src={graphqlIcon} className=\"logo\" alt=\"graphql-logo\" />\n    </div>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\n\nconst ComponentsPage = () => <div>components</div>;\n\nexport default ComponentsPage;\n","import reactIcon from '../static/react-logo.svg';\nimport gatsbyIcon from '../static/gatsby.svg';\nimport graphqlIcon from '../static/graphql.svg';\nimport awsIcon from '../static/aws.svg';\nimport cssIcon from '../static/css.svg';\nimport cypressIcon from '../static/cypress-io.svg';\nimport expressIcon from '../static/express.svg';\nimport javascriptIcon from '../static/javascript.svg';\nimport jestIcon from '../static/jest.svg';\nimport nodeIcon from '../static/nodejs.svg';\nimport reduxIcon from '../static/redux.svg';\nimport reactQuery from '../static/react-query.svg';\nimport eslintIcon from '../static/eslint.svg';\nimport githubIcon from '../static/github.svg';\nimport mongodbIcon from '../static/mongodb.svg';\n\nexport default [\n  {\n    name: 'Amazon Web Service',\n    logo: awsIcon,\n    description:\n      \"AWS is a massive cloud computing service. You'd need a whole life time to master but I've worked with a multitude of features. S3, EC2s hosting different types of web applications. Lambdas!\",\n  },\n  {\n    name: 'React',\n    logo: reactIcon,\n    description:\n      'My Javascript library for building UIs of choice. I worked with React extensively and still enjoy using it regularly.',\n  },\n  {\n    name: 'Gatsby',\n    logo: gatsbyIcon,\n    description:\n      'React-based open-source framework for creating websites and apps. Really enjoyed using gatsby and integrating it with GraphQL, to create a CMS.',\n  },\n  {\n    name: 'React Query',\n    logo: reactQuery,\n    description:\n      'Performant and powerful data synchronization for React. I did the migration from redux to useQuery and mutations for our api requests. Some powerful stuff.',\n  },\n  {\n    name: 'Redux',\n    logo: reduxIcon,\n    description:\n      \"Redux is an open-source JavaScript library for managing application state. You either love it or hate, but I've used it for heavily for dispatching api requests and storing resulting data.\",\n  },\n  {\n    name: 'ES6',\n    logo: javascriptIcon,\n    description:\n      \"I'm up to date with the latest and greatest in terms of JS and syntax. Writing clean readable code using the latest syntax is my jam!\",\n  },\n  {\n    name: 'NodeJS',\n    logo: nodeIcon,\n    description:\n      \"An open-source, cross-platform, back-end JavaScript runtime environment outside the browser. I love writing in node, it's where I was first exposed to JS, whether it's writing tests or server side code.\",\n  },\n  {\n    name: 'Graphql',\n    logo: graphqlIcon,\n    description:\n      'Data query and manipulation language for APIs. I used GQL to build a CMS that queried the exact data required to build the page. Really cool integration with Gatsby.',\n  },\n  {\n    name: 'Cypress',\n    logo: cypressIcon,\n    description:\n      \"Automated browser testing framework. It's the latest and greatest in the word of E2E testing. Powerful debugging and test recordings.\",\n  },\n  {\n    name: 'ExpressJS',\n    logo: expressIcon,\n    description:\n      'A minimal and flexible backend Node.js web application framework. This is my go to for quick speedy personal projects that require a backend.',\n  },\n  {\n    name: 'Jest',\n    logo: jestIcon,\n    description:\n      'A JavaScript testing framework with a focus on simplicity. I aim for around 95%+ unit testing coverage of both isolated and integrated components.',\n  },\n  {\n    name: 'CSS',\n    logo: cssIcon,\n    description:\n      'Web application styling. Love how light weight css can be in the right hands, using both CSS in JS and modular. The real power of a beautiful + professional site.',\n  },\n  {\n    name: 'ESLint',\n    logo: eslintIcon,\n    description:\n      'A pluggable and configurable linter tool for maintaining code quality. Clean code is certainly your friend in an organisation and frankly anywhere, so a good linter configured to your spec is essential.',\n  },\n  {\n    name: 'Github',\n    logo: githubIcon,\n    description:\n      'Used for hosting this site. As well as deploying, testing and linting with github actions. A great offering from microsoft, would you believe!',\n  },\n  {\n    name: 'MongoDB',\n    logo: mongodbIcon,\n    description:\n      'MongoDB is a document database with the scalability and flexibility. Super cool how much allocation you can get for free with mongo atlas.',\n  },\n];\n","import React from 'react';\n\nimport techList from '../lib/tech-data';\nimport './technologies-page.css';\n\nconst TechnologiesPage = () => (\n  <div>\n    <div className=\"tech-content\">\n      <h1>Technologies</h1>\n      <p>Here's a few technologies I'm currently working with.</p>\n    </div>\n    <div className=\"card-group\">\n      {techList.map(({ logo, name, description }) => (\n        <div className=\"tech-card\">\n          <div className=\"tech-card-inner\">\n            <div className=\"tech-card-front\">\n              <img src={logo} className=\"tech-icon\" key={`key-${name}`} alt={name} />\n            </div>\n            <div className=\"tech-card-back\">\n              <div className=\"card-title\">{name}</div>\n              <div className=\"card-description\">{description}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default TechnologiesPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './input.css';\n\nconst Input = ({ placeholder, label, onChange, value, isRequired }) => (\n  <div className=\"input-wrapper\">\n    <div>\n      <span>{label}</span>\n      <span>{isRequired ? <span className=\"required\">*</span> : null}</span>\n    </div>\n    <input placeholder={placeholder} value={value} onChange={onChange} />\n  </div>\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  isRequired: false,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport greenCheckIcon from '../static/green-checkmark.svg';\nimport redCheckIcon from '../static/red-x.svg';\nimport './notification.css';\n\nconst Notification = ({ isSent }) => {\n  const messageText = isSent ? 'Message sent!' : 'Oops not sent!';\n  return (\n    <div className=\"notification\">\n      <div className=\"model-background\"></div>\n      <div className=\"model-card\">\n        {messageText}\n        <img className=\"check-svg\" src={isSent ? greenCheckIcon : redCheckIcon} alt=\"sent-status\" />\n      </div>\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  messageText: PropTypes.string.isRequired,\n  isSent: PropTypes.bool,\n};\n\nNotification.defaultProps = {\n  isSent: undefined,\n};\n\nexport default Notification;\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\n\nimport Input from '../components/input';\nimport Notification from '../components/notification';\nimport './contact-page.css';\n\nconst ContactsPage = () => {\n  const [templateParams, setTemplateParams] = useState({});\n\n  const handleEmailSumbit = (e) => {\n    e.preventDefault();\n\n    emailjs.send('service_bn4itfm', 'template_2yszvsy', templateParams, 'user_uwcvxE5YBvzMPeKE7YIxl').then(\n      () => {\n        setTemplateParams({ messageSubmitted: true });\n      },\n      () => {\n        setTemplateParams({ messageFailed: true });\n      },\n    );\n  };\n\n  const isDisabled = templateParams.messageSubmitted || !templateParams.message || !templateParams.replyEmail;\n\n  return (\n    <div>\n      <form className=\"form\" name=\"Contact Form\">\n        <h1 className=\"page-header\">Contact me</h1>\n        <fieldset className=\"fields\">\n          <Input\n            label=\"Name\"\n            placeholder=\"Enter your name...\"\n            value={templateParams.name}\n            onChange={(e) => setTemplateParams({ ...templateParams, name: e.target.value })}\n          />\n          <br />\n          <Input\n            label=\"Phone Number\"\n            placeholder=\"Enter your phone number...\"\n            value={templateParams.phoneNumber}\n            onChange={(e) => setTemplateParams({ ...templateParams, phoneNumber: e.target.value })}\n          />\n          <br />\n          <Input\n            isRequired={true}\n            label=\"Email\"\n            placeholder=\"Enter your email...\"\n            value={templateParams.replyEmail}\n            onChange={(e) => setTemplateParams({ ...templateParams, replyEmail: e.target.value })}\n          />\n          <br />\n          <div className=\"input-wrapper\">\n            Message<span className=\"required\">*</span>\n            <textarea\n              className=\"message\"\n              placeholder=\"Enter a message...\"\n              value={templateParams.message}\n              onChange={(e) => setTemplateParams({ ...templateParams, message: e.target.value })}\n            />\n          </div>\n          <br />\n          <div className=\"button-wrapper\">\n            <button\n              disabled={isDisabled}\n              className={`${isDisabled ? 'button-disabled' : 'primary-button'} button send`}\n              type=\"submit\"\n              onClick={handleEmailSumbit}\n              value=\"Submit\"\n            >\n              Send\n            </button>\n          </div>\n        </fieldset>\n      </form>\n      {templateParams.messageSubmitted || templateParams.messageFailed ? (\n        <Notification isSent={templateParams.messageSubmitted} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport homeIcon from '../static/home.svg';\nimport techIcon from '../static/tech.svg';\nimport contactIcon from '../static/contact.svg';\nimport './navigation.css';\n\nconst links = [\n  {\n    label: 'Home',\n    icon: homeIcon,\n    destination: '/',\n  },\n  {\n    label: 'Technologies',\n    icon: techIcon,\n    destination: '/technologies',\n  },\n  {\n    label: 'Contact me',\n    icon: contactIcon,\n    destination: '/contact',\n  },\n];\n\nconst NavBar = () => (\n  <nav className=\"nav-container\">\n    <div className=\"nav-header\">\n      <h2 className=\"name\">\n        <span className=\"jay\">J</span>\n        oe Milne\n        <span className=\"location\">London</span>\n      </h2>\n    </div>\n    <div className=\"nav-links\">\n      {links.map(({ label, icon, destination }) => (\n        <Link to={destination}>\n          <img src={icon} className=\"nav-icon\" alt={label} />\n          <span className=\"nav-label\">{label}</span>\n        </Link>\n      ))}\n    </div>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Hero from './pages/hero';\nimport ComponentsPage from './pages/components-page';\nimport TechnologiesPage from './pages/technologies-page';\nimport ContactsPage from './pages/contact-page';\nimport NavBar from './components/navigation';\nimport './common.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/components\">\n              <NavBar />\n              <ComponentsPage />\n            </Route>\n            <Route path=\"/technologies\">\n              <NavBar />\n              <TechnologiesPage />\n            </Route>\n            <Route path=\"/contact\">\n              <div className=\"overflow-contact\">\n                <NavBar />\n                <ContactsPage />\n              </div>\n            </Route>\n            <Route path=\"/\">\n              <div className=\"hero-overflow\">\n                <NavBar />\n                <Hero />\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </header>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}